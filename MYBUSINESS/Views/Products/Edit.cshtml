@model MYBUSINESS.Models.Product

@{
    ViewBag.Title = "Update Product";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="content-wrapper">
    <section class="content">
        <div class="row">
            <!-- left column -->
            <div class="col-md-6">
                <!-- general form elements -->
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">Update Product</h3>
                    </div>
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        <form role="form">
                            <div class="box-body">


                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @*@Html.HiddenFor(model => model.Id)*@


                                <div class="form-group">
                                    @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", @Readonly = "Readonly" } })
                                    @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })

                                </div>



                                @*@Html.HiddenFor(model => model.IsService, new { Value = "false" })*@
                                @Html.HiddenFor(model => model.ShowIn, new { Value = "P" })
                                <div class="form-group">
                                    @Html.DropDownList("IsService", new SelectList(ViewBag.UnitTypeOptionList, "Value", "Text", Model.IsService),
                                    new { @class = "form-control", id = "isService" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.BarCode, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.BarCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BarCode, "", new { @class = "text-danger" })

                                </div>

                                <div  style="display:none;" class="form-group">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.PurchasePrice, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.PurchasePrice, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PurchasePrice, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.SalePrice, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.SalePrice, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SalePrice, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.WholeSalePrice, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.WholeSalePrice, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.WholeSalePrice, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    <div id="stk" class="form-group">

                                        @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label" })
                                        @{
                                            MYBUSINESS.Models.Employee currentUser = (MYBUSINESS.Models.Employee)HttpContext.Current.Session["CurrentUser"];
                                            if (currentUser.EmployeeTypeId == 0)
                                            {
                                                @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control", @id = "stock" } })
                                            }
                                            else
                                            {
                                                @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control", @id = "stock", @disabled = "disabled" } })
                                            }
                                        }

                                        @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })

                                    </div>
                                </div>

                                <div id="stk" class="form-group">
                                    @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control", @id = "Remarks" } })
                                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })

                                </div>
                                <div style="display:none;" class="form-group">
                                    @Html.LabelFor(model => model.PerPack, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.PerPack, new { htmlAttributes = new { @class = "form-control", @id = "perPack" } })
                                    @Html.ValidationMessageFor(model => model.PerPack, "", new { @class = "text-danger" })

                                </div>

                                <div style="display:none;" class="form-group">
                                    @Html.LabelFor(model => model.Saleable, htmlAttributes: new { @class = "control-label" })


                                    @Html.EditorFor(model => model.Saleable)
                                    @Html.ValidationMessageFor(model => model.Saleable, "", new { @class = "text-danger" })

                                </div>

                            </div>

                            <div class="box-footer">
                                <input type="submit" value="Update" id="CreateProduct" class="btn btn-primary" />
                                @Html.ActionLink("Back to List", "Index")
                            </div>


                        </form>
                    }
                </div>
            </div>
        </div>
    </section>
</div>



<script>
    $('#stock').keyup(function () {
        this.value = this.value.replace(/[^0-9]/g, '');
    });

    //$('#packing,#perPack').keyup(function () {

    //    $("#stock").val($("#packing").val() * $("#perPack").val())
    //});


</script>

@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
