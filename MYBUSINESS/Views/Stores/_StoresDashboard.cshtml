@model IEnumerable<MYBUSINESS.Models.Store>

@{
    /**/

    /**/
    string whtieSpace = ((char)160).ToString() + ((char)160).ToString() + ((char)160).ToString() + ((char)160).ToString();
    MYBUSINESS.Models.Employee currentUser = (MYBUSINESS.Models.Employee)HttpContext.Current.Session["CurrentUser"];
    //Dictionary<decimal, decimal> LstMaxSerialNo = new Dictionary<decimal, decimal>();
    //Dictionary<decimal, decimal> LstMaxSerialNo = @ViewBag.LstMaxSerialNo;
    Dictionary<decimal, decimal> LstMaxSerialNo = ViewBag.LstMaxSerialNo as Dictionary<decimal, decimal>;
    <div id="NewData">
        <section class="content">
            <div class="row">
                <div class="col-xs-12">
                    <div class="box">
                        @*<div class="box-header">
                                <h3 class="box-title">Hover Data Table</h3>
                            </div>*@
                        <!-- /.box-header -->
                        <div class="box-body">
                            <table class="table table-hover cell-border" id="SOSRIndex">
                                <thead>
                                    <tr>
                                        <th style="width:13%;">
                                            @Html.DisplayNameFor(model => model.Name)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.Description)
                                        </th>
                                        <th style="width:8%;" class="noPrint">
                                            Actions
                                        </th>


                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Name)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Description)
                                            </td>
                                            <td class="noPrint">
                                                @{

                                                    @*if (LstMaxSerialNo != null && LstMaxSerialNo.ContainsValue((int)item.SOSerial))
                                                        {
                                                            @Html.ActionLink("Update", "Edit", new { id = item.Id, update = true }, new { @class = "btn btn-info" })
                                                        }
                                                        else
                                                        {

                                                            @Html.ActionLink(whtieSpace + "View", "Edit", new { id = item.Id, update = false }, new { @class = "btn btn-info" })
                                                        }*@

                                                    @*if (currentUser.EmployeeTypeId == 0)
                                                    {
                                                        @Html.ActionLink("Update", "Edit", new { id = item.Id, update = true }, new { @class = "btn btn-info" })
                                                    }
                                                    else
                                                    {
                                                        @Html.ActionLink(whtieSpace + "View", "Edit", new { id = item.Id, update = false }, new { @class = "btn btn-info" })
                                                    }*@  
                                                        @Html.ActionLink("Update", "Edit", new { id = item.Id, update = true }, new { @class = "btn btn-info" })
                                                        @Html.ActionLink(whtieSpace + "View", "Edit", new { id = item.Id, update = false }, new { @class = "btn btn-info" })

                                                }
                                            </td>

                                        </tr>
                                        //Balance = TotalSOAmout - TotalSRAmout - BillPaid - Discount - PrevBalance;
                                    }
                                </tbody>
                                <tfoot>
                                  
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>

}

<script type="text/javascript">
    $(document).ready(function () {



        $('#SOSRIndex').DataTable({
            "paging": true,
            "lengthChange": true,
            "pageLength": 100,
            "searching": true,
            "ordering": true,
            "info": true,
            rowReorder: {
                selector: 'td:nth-child(2)'
            },
            "responsive": true,
            "autoWidth": false,
            "order": [[1, "desc"]],
            dom: 'Bfrtip',
            buttons: [
                //{
                //    extend: 'copyHtml5',
                //    exportOptions: {
                //        columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                //    }
                //},
                //{
                //    extend: 'csvHtml5',
                //    exportOptions: {
                //        columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                //    }
                //},
                //{
                //    extend: 'excelHtml5',
                //    exportOptions: {
                //        columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                //    }
                //},
                //{
                //    extend: 'pdfHtml5',
                //    orientation: 'landscape',
                //    pageSize: 'LEGAL',
                //    exportOptions: {
                //        columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                //    }
                //},
                //{
                //    extend: 'print',
                //    exportOptions: {
                //        columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                //    }
                //},
                'colvis'
            ],

            "footerCallback": function (row, data, start, end, display) {
                var api = this.api(), data;

                // Remove the formatting to get integer data for summation
                var intVal = function (i) {
                    return typeof i === 'string' ?
                        i.replace(/[\$,]/g, '') * 1 :
                        typeof i === 'number' ?
                            i : 0;
                };

                // Order No
                pageTotal = api
                    .column(1, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        a += 1;
                        //alert(a);
                        return intVal(a);
                    }, 0);
                $(api.column(1).footer()).html(pageTotal);


                // Order Qty
                pageTotal = api
                    .column(4, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(4).footer()).html(pageTotal);



                // Order Amount
                pageTotal = api
                    .column(5, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(5).footer()).html(pageTotal);

                // Return Qty
                pageTotal = api
                    .column(6, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(6).footer()).html(pageTotal);

                // Return amnt
                pageTotal = api
                    .column(7, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(7).footer()).html(pageTotal);

                // Discount
                pageTotal = api
                    .column(8, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(8).footer()).html(pageTotal);


                // Bill paid
                pageTotal = api
                    .column(10, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(10).footer()).html(pageTotal);

                // Balance
                //pageTotal = api
                //    .column(11, { page: 'current' })
                //    .data()
                //    .reduce(function (a, b) {
                //        return intVal(a) + intVal(b);
                //    }, 0);
                //$(api.column(11).footer()).html(pageTotal);

                // Profit
                pageTotal = api
                    .column(12, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(12).footer()).html(pageTotal);

            }

        });




        //$('#SOSRIndex').DataTable({
        //    fixedHeader: {
        //        footer: true
        //    }
        //});

        $('#SOSRIndex1').DataTable({
            //fixedHeader: {
            //    header: true,
            //    footer: true
            //},
            "scrollX": true,
            "scrollY": "400px",
            "scrollCollapse": true,
            "paging": false,
            "bInfo": false,
            "order": [[1, "desc"]],
            "searching": false,

            "footerCallback": function (row, data, start, end, display) {
                var api = this.api(), data;

                // Remove the formatting to get integer data for summation
                var intVal = function (i) {
                    return typeof i === 'string' ?
                        i.replace(/[\$,]/g, '') * 1 :
                        typeof i === 'number' ?
                            i : 0;
                };

                // Order No
                pageTotal = api
                    .column(1, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        a += 1;
                        //alert(a);
                        return intVal(a);
                    }, 0);
                $(api.column(1).footer()).html(pageTotal);


                // Order Qty
                pageTotal = api
                    .column(4, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(4).footer()).html(pageTotal);



                // Order Amount
                pageTotal = api
                    .column(5, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(5).footer()).html(pageTotal);

                // Return Qty
                pageTotal = api
                    .column(6, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(6).footer()).html(pageTotal);

                // Return amnt
                pageTotal = api
                    .column(7, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(7).footer()).html(pageTotal);

                // Discount
                pageTotal = api
                    .column(8, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(8).footer()).html(pageTotal);


                // Bill paid
                pageTotal = api
                    .column(10, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(10).footer()).html(pageTotal);

                // Balance
                //pageTotal = api
                //    .column(11, { page: 'current' })
                //    .data()
                //    .reduce(function (a, b) {
                //        return intVal(a) + intVal(b);
                //    }, 0);
                //$(api.column(11).footer()).html(pageTotal);

                // Profit
                pageTotal = api
                    .column(12, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(12).footer()).html(pageTotal);

            }

        });

    });


</script>
