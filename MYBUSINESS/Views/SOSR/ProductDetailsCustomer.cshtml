@using MYBUSINESS.Models
@model List<CustomerDetailsViewModel>
    <style>
        #productDetailsTable td {
            padding: 10px; /* Adjust the value as needed */
        }
    </style>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-5"></div>
        <div class="col-md-6">
            @*<h1>Selected Products</h1>*@
            <img src="~/dist/img/PhevaImg.png" alt="Selected Products" style="max-width: 100%; height: auto;" />
            <table id="productDetailsTable">
                <thead>
                    <tr>
                        @*<th>Product ID</th>*@
                        @*<th>Product Name</th>*@
                        @*<th>Sale Price</th>*@
                        @*<th>Purchase Price</th>*@
                        @*<th>Quantity</th>*@
                        @*<th>Total</th>*@
                    </tr>
                </thead>
                <tbody>
                    <!-- This tbody will be dynamically populated -->
                </tbody>
            </table>
            <div id="paymentDetails">

            </div>
            <div id="customerDetails">

            </div>
        </div>
        <div class="col-md-1"></div>
    </div>
</div>

<script src="~/Scripts/jquery.signalR-2.4.3.js"></script>
<script src="~/signalr/hubs"></script>
<script>
    $(document).ready(function () {
        const connection = $.connection.phevaHub;
        connection.client.broadcastProductUpdate = function (products) {
            console.log('Received product update in Detail view:', products);
            $('#productDetailsTable tbody').empty();
            let overallTotal = 0;
            products.forEach(function (product) {
                const totalPrice = product.SalePrice * product.Quantity;
                overallTotal += totalPrice;
                $('#productDetailsTable tbody').append(
                    `<tr>
                        <td>${product.ProductName}</td>
                        <td>${product.Quantity}</td>
                       <td>${formatNumberWithDotss(totalPrice)}</td>
                    </tr>`
                );
            });
            // Append the overall total row
            if (overallTotal !== 0) { 
            $('#productDetailsTable tbody').append(
                `<tr>
                <td colspan="1"></td>
                <td style="font-weight: bold;">${formatNumberWithDotss(overallTotal)} ₫</td> <!-- Display overall total -->
            </tr>`
                );
            }
        };
        // Payment details handler
        connection.client.broadcastPaymentDetails = function (payments) {
            console.log('Received payment details in Detail view:', payments);

            // Ensure `payments.LeftToPayVndBalance` is valid; set to 0 if NaN
            const leftToPay = isNaN(payments.LeftToPayVndBalance) ? 0 : payments.LeftToPayVndBalance;

            // Clear previous payment details if present
            $('#paymentDetails').empty();

            // Append payment details below the table
            $('#paymentDetails').append(
                `<div>
            <p><strong>Credit Card:</strong> ${payments.CardVndAmount} VND</p>
            <p><strong>Change due:</strong> ${leftToPay} VND</p>
        </div>`
            );
        };
        // Customer details handler
        connection.client.broadcastCustomerDetails = function (customers) {
            console.log('Received customers details in Detail view:', customers);

            // Ensure `payments.LeftToPayVndBalance` is valid; set to 0 if NaN
            // Clear previous payment details if present
            $('#customerDetails').empty();
            //CompanyName
            //:
            //"M-INVOICE - KIỂM THỬ HĐĐT CÓ MÃ"
            //CustomerAddress
            //:
            //"Số nhà 16, ngõ 269/1, đường Giáp Bát, Phường Giáp Bát, Quận Hoàng Mai, Hà Nội"
            //CustomerName
            //:
            //"Người mua không lấy hóa đơn"
            //VatNumber
            //:
            //"0106026495-999"
            // Append payment details below the table
            $('#customerDetails').append(
             `<div>
            <p><strong>Your VAT Invoice information:</strong></p>
            <p><strong>Customer name:</strong> ${customers.CustomerName}</p>
            <p><strong>Company:</strong> ${customers.CompanyName}</p>
            <p><strong>Address:</strong> ${customers.CustomerAddress}</p>
            <p><strong>Tax code:</strong> ${customers.VatNumber}</p>
        </div>`
            );
            //setTimeout(function () {
            //    location.reload();
            //}, 60000);

        };
        //////Payment Details
        //connection.client.broadcastPaymentDetails = function (payments) {
        //    debugger;
        //    console.log('Received payment details in Detail view:', payments);
        //    $('#paymentDetails').empty(); // assuming you have an element to show payment details
        //    debugger;
        //    $('#paymentDetails').append(
        //        `<div>
        //    Card VND Amount: ${formatNumberWithDotss(payments.CardVndAmount)}<br />
        //    Left to Pay VND Balance: ${formatNumberWithDotss(payments.LeftToPayVndBalance)}
        //    </div>`
        //    );
        //};
        ///Start connection
        $.connection.hub.start({ transport: ['webSockets', 'longPolling', 'serverSentEvents'] })
            .done(function () {
                console.log('Connection started!');
            })
            .fail(function (error) {
                console.error('Could not connect to SignalR hub:', error);
            });

        function formatNumberWithDotss(number) {
            var numberStr = Math.floor(number).toString();
            return numberStr.replace(/\B(?=(\d{3})+(?!\d))/g, ".");
        }
    });

</script>

@*<td>${product.ProductId}</td>
    <td>${product.ProductName}</td>
    <td>${product.SalePrice}</td>
    <td>${product.PurchasePrice}</td>
    <td>${product.Quantity}</td>*@
@*<td colspan="2" style="text-align: right; font-weight: bold;">Overall Total:</td>*@